// Code generated by "stringer -type=PayStatus,RefundStatus,SignType,FeeType,TradeType,LimitPay constants.go"; DO NOT EDIT.

package pay

import "fmt"

const _PayStatus_name = "NotPayPaySuccessPayRefundPayClosedPayError"

var _PayStatus_index = [...]uint8{0, 6, 16, 25, 34, 42}

func (i PayStatus) String() string {
	i -= 1
	if i < 0 || i >= PayStatus(len(_PayStatus_index)-1) {
		return fmt.Sprintf("PayStatus(%d)", i+1)
	}
	return _PayStatus_name[_PayStatus_index[i]:_PayStatus_index[i+1]]
}

const _RefundStatus_name = "RefundProcessing"

var _RefundStatus_index = [...]uint8{0, 16}

func (i RefundStatus) String() string {
	i -= 1
	if i < 0 || i >= RefundStatus(len(_RefundStatus_index)-1) {
		return fmt.Sprintf("RefundStatus(%d)", i+1)
	}
	return _RefundStatus_name[_RefundStatus_index[i]:_RefundStatus_index[i+1]]
}

const _SignType_name = "MD5HMAC"

var _SignType_index = [...]uint8{0, 3, 7}

func (i SignType) String() string {
	i -= 1
	if i < 0 || i >= SignType(len(_SignType_index)-1) {
		return fmt.Sprintf("SignType(%d)", i+1)
	}
	return _SignType_name[_SignType_index[i]:_SignType_index[i+1]]
}

const _FeeType_name = "CNY"

var _FeeType_index = [...]uint8{0, 3}

func (i FeeType) String() string {
	i -= 1
	if i < 0 || i >= FeeType(len(_FeeType_index)-1) {
		return fmt.Sprintf("FeeType(%d)", i+1)
	}
	return _FeeType_name[_FeeType_index[i]:_FeeType_index[i+1]]
}

const _TradeType_name = "JSAPINATIVEAPP"

var _TradeType_index = [...]uint8{0, 5, 11, 14}

func (i TradeType) String() string {
	i -= 1
	if i < 0 || i >= TradeType(len(_TradeType_index)-1) {
		return fmt.Sprintf("TradeType(%d)", i+1)
	}
	return _TradeType_name[_TradeType_index[i]:_TradeType_index[i+1]]
}

const _LimitPay_name = "NoCredit"

var _LimitPay_index = [...]uint8{0, 8}

func (i LimitPay) String() string {
	i -= 1
	if i < 0 || i >= LimitPay(len(_LimitPay_index)-1) {
		return fmt.Sprintf("LimitPay(%d)", i+1)
	}
	return _LimitPay_name[_LimitPay_index[i]:_LimitPay_index[i+1]]
}
